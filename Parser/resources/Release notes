Committed, but not yet released (Build 1100)
- Added checkIris() method to SPARQLStruct: tests all IRIREFs and PrefixedNames for well-formedness according to rfc3987
- Added Unicode escape function "unescapeUcode()" to sparqlparser
- Moved version info out of __init__.py to separate file, alltests now prints version and build numbers
- Renamed ParseStruct "pattern" attribute to "_pattern" 
- Converted func_test to unittest format, renamed to func_unittest
- Cleaned up code and docstrings in base.py and sparqlparser.py
- Changed SPARQLStruct classmethod expandIri() to a sparqlparser module level function
- Added design_notes.txt
- Module extras.py exists no longer, functionality moved to base.py

Version 0.2.4
- Added SPARQLStruct instance method "expandIris()" to replace all iri elements with their expansion, taking into account the prefixes and base iri in force at the location of the iri
- Added SPARQLStruct classmethod "expandIri()" that takes 
	- a iri string (conforming to either a PrefixedName or a IRIREF pattern),
	- a dictionary of prefix-value mappings,
	- and a base iri
	and returns the iri string, expanded in the context defined by prefixes and base iri.
- Added a howto.txt with a short explanation how to use the framework.
	
Version 0.2.3
- Introduced SPARQLStruct as subclass of ParseStruct, holds additional SPARQL related info
- SPARQL parser now generates SPARQLStruct objects
- SPARQLStruct objects now contain "prefixes" and "baseiri" attributes that keep track of 
	the current prefixes dictionary and base iri value (accessable through getPrefixes() and getBaseiri() methods)

Version 0.2.2

- Labels added for BASE, PREFIX, WHERE, Update, Prologue and Constraint occurrences
- Improved patterns for NOT IN, NOT EXISTS, NIL and ANON, leading to better dump() output

Version 0.2.1

- Internal: code cleanup
- External: example.py extended

Version 0.2

Package now called parsertools.

The structure is as follows:
- parsertools.base: basic toolset, language independent
- parsertools.extras: utility functions for helping with specifying grammars. In this release: separatedList.
- parsertools.parsers: package containing parsers implemented. In this release SPARQL only.

A usage example is given in example.py.